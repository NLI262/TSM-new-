{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/poc/src/components/ProjectPage/ProjectPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport Toolbar from '../dashboard/Toolbar';\nimport Chartx from '../ProjectPage/Chartx';\nimport Sprintcreate from './Sprintcreate.js';\nimport './ProjectPage.css'; // import Bar from './Bar.js';\n// import Togglebutton from '../dashboard/Togglebutton.js';\n\nexport default class ProjectPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: null,\n      id: null\n    };\n  }\n\n  async componentDidMount() {\n    let id = this.props.match.params.post_id;\n    this.setState({\n      id: id\n    });\n    axios.get('TSM/project/list/' + id).then(res => {\n      this.setState({\n        post: res.data\n      });\n      console.log('project overview', res);\n    });\n  }\n\n  render() {\n    //   let sideDrawerOpen;\n    // if(this.state.sideDrawerOpen){\n    //   sideDrawerOpen=<Bar/>\n    //  }\n    // var x =window.location.href;\n    // console.log(x)\n    //  var y= x.substring(x.lastIndexOf('/') +1)\n    // // y=y.replace(/%20/,' ')\n    //  console.log(y)\n    let addModalClose = () => this.setState({\n      addModalShow: false\n    });\n\n    let addModalChartClose = () => this.setState({\n      addModalChartShow: false\n    });\n\n    const post = this.state.post ? React.createElement(\"div\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      drawerClickHandler: this.drawOpenClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"pos1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pos2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        addModalChartShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Analysis\"), React.createElement(Chartx, {\n      show: this.state.addModalChartShow,\n      onHide: addModalChartClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pos3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Title :  \", this.state.post.projectTitle), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Description:   \", this.state.post.projectDescription), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Start Date : \", this.state.post.startDate), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" End Date : \", this.state.post.endDate), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" id : \", this.state.post.id)), React.createElement(\"div\", {\n      className: \"pos4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        addModalShow: true,\n        getId: post\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      class: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))), React.createElement(Sprintcreate, {\n      show: this.state.addModalShow,\n      onHide: addModalClose,\n      details: this.state.getId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, post);\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/poc/src/components/ProjectPage/ProjectPage.js"],"names":["React","axios","Button","Toolbar","Chartx","Sprintcreate","ProjectPage","Component","state","post","id","componentDidMount","props","match","params","post_id","setState","get","then","res","data","console","log","render","addModalClose","addModalShow","addModalChartClose","addModalChartShow","drawOpenClickHandler","projectTitle","projectDescription","startDate","endDate","getId"],"mappings":"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","sourcesContent":["import React  from 'react'\nimport axios from 'axios';\nimport {Button} from 'react-bootstrap';\nimport Toolbar from '../dashboard/Toolbar';\nimport Chartx from '../ProjectPage/Chartx';\nimport Sprintcreate from './Sprintcreate.js';\nimport './ProjectPage.css';\n\n\n// import Bar from './Bar.js';\n// import Togglebutton from '../dashboard/Togglebutton.js';\n\n\nexport default class ProjectPage  extends React.Component{\n//  state={\n//          sideDrawerOpen: true\n//        };\n//          drawOpenClickHandler =()=>{\n//           this.setState((prevState)=> {\n//          return{ sideDrawerOpen:!prevState.sideDrawerOpen  };\n        \n//        }\n//        );\n        \n//          };\n        \n   \nstate={\n    post: null,\n    id:null,\n\n}\n async componentDidMount(){\n\n    let id = this.props.match.params.post_id;\n    this.setState({id:id});\n     axios.get ('TSM/project/list/'+ id )\n        \n    .then(res =>{this.setState\n         ({post: res.data\n            })\n         console.log('project overview',res);\n      \n\n        \n})\n   \n}\n\nrender()\n{\n  //   let sideDrawerOpen;\n  // if(this.state.sideDrawerOpen){\n  //   sideDrawerOpen=<Bar/>\n  //  }\n\n  // var x =window.location.href;\n  // console.log(x)\n  //  var y= x.substring(x.lastIndexOf('/') +1)\n  // // y=y.replace(/%20/,' ')\n  //  console.log(y)\n\n\n\n  let addModalClose= ()=> this.setState({addModalShow:false});\n  let addModalChartClose =()=> this.setState({addModalChartShow:false});\n    const post = this.state.post ? (\n          <div className=\"post\">\n               <Toolbar drawerClickHandler ={this.drawOpenClickHandler}/>\n               <br></br>\n\n\n    <div className=\"pos1\">       \n           {/* <Bar   show ={sideDrawerOpen}/>\n           <Togglebutton/>  */}\n           <div className=\"pos2\">\n           <Button onClick={()=>this.setState({addModalChartShow: true})}>Analysis</Button>\n            <Chartx  show={this.state.addModalChartShow}  onHide={addModalChartClose}/>\n\n          \n           </div>\n          <div className=\"pos3\">\n        <h4 className=\"center\"> Title :  {this.state.post.projectTitle}</h4> \n          <p> Description:   {this.state.post.projectDescription}</p>\n          <p> Start Date : {this.state.post.startDate}</p>\n          <p> End Date : {this.state.post.endDate}</p>\n          <p> id : {this.state.post.id}</p>\n\n\n          </div>\n\n\n\n\n\n          <div className=\"pos4\">\n          <Button onClick={()=> this.setState({addModalShow:true , getId: post})} > <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n</Button>\n \n          </div>\n          </div>\n        \n\n\n<Sprintcreate show={this.state.addModalShow}  onHide={addModalClose}\n details ={this.state.getId}/>\n \n         </div>\n        ) : (\n        <div className=\"center\"></div>\n      );\n\n\n        return(<div>\n           {post}\n        \n            </div>\n   \n        );\n}\n}"]},"metadata":{},"sourceType":"module"}